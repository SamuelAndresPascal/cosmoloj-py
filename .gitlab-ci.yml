default:
  before_script:
    - echo $CONDA_HOME
    - PATH=$PATH:$CONDA_HOME/bin
    - if [ $CI_COMMIT_TAG ] ; then VERSION=$(echo $CI_COMMIT_TAG | cut -d'_' -f 2) ; else VERSION=$CI_COMMIT_BRANCH ; fi
    - echo "computed version:" $VERSION
    - source resources/init_conda.sh cosmoloj_py 3.11

  after_script:
    - PATH=$PATH:$CONDA_HOME/bin
    - . ./clean_conda.sh cosmoloj_py

stages:
  - envs
  - lint
  - doc
  - test
  - python-version-support
  - coverage
  - demo
  - pypi-package
  - pypi-publish
  - conda-package
  - conda-publish
  - sonar

include:
  - local: '.gitlab-ci-env.yml'
  - local: '.gitlab-ci-lint.yml'
  - local: '.gitlab-ci-doc.yml'
  - local: 'simpleunit/.gitlab-ci.yml'
  - local: 'taxref/.gitlab-ci.yml'
  - local: 'coordop/.gitlab-ci.yml'
  - local: 'multienv/.gitlab-ci.yml'
  - local: 'bibliograpy/.gitlab-ci.yml'
  - local: 'pylotable/.gitlab-ci.yml'
  - local: 'pycar/.gitlab-ci.yml'

conda_envs:
  stage: envs
  before_script:
    - echo $CONDA_HOME
    - PATH=$PATH:$CONDA_HOME/bin
    - source resources/init_conda.sh multienv 3.13
    - conda install -c cosmoloj multienv=0.5.0 -y
  script:
    - cd taxref
    - pyenvs deps
  after_script:
    - PATH=$PATH:$CONDA_HOME/bin
    - . ./clean_conda.sh multienv
  artifacts:
    when: always
    paths:
      - taxref/environment_*
    expire_in: 2 days

pylintrc_envs:
  stage: envs
  before_script:
    - echo $CONDA_HOME
    - PATH=$PATH:$CONDA_HOME/bin
    - source resources/init_conda.sh multienv 3.13
    - conda install -c cosmoloj multienv=0.5.0 -y
  script:
    - pyenvs lint
  after_script:
    - PATH=$PATH:$CONDA_HOME/bin
    - . ./clean_conda.sh multienv
  artifacts:
    when: always
    paths:
      - pylintrc_*
    expire_in: 2 days

coverage:
  stage: coverage
  rules:
    - if: $CI_COMMIT_BRANCH
  script:
    - conda install coverage
    - coverage xml
  artifacts:
    when: always
    paths:
      - coverage.xml
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    expire_in: 2 days

sonar:
  stage: sonar
  rules:
    - if: $CI_COMMIT_BRANCH
  script:
    - $SONAR_SCANNER_HOME/bin/sonar-scanner
  artifacts:
    expire_in: 2 days
