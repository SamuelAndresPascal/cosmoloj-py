default:
  before_script:
    - echo $CONDA_HOME
    - PATH=$PATH:$CONDA_HOME/bin
    - python --version
    - conda --version
    - which python
    - conda init bash
    - conda create -n cosmoloj_py python=3.10
    - . ~/.bashrc
    - conda activate cosmoloj_py
    - which python
    - conda install pylint pytest

  after_script:
    - PATH=$PATH:$CONDA_HOME/bin
    - python --version
    - conda --version
    - which python
    - conda init bash
    - . ~/.bashrc
    - conda activate cosmoloj_py
    - which python
    - conda remove pylint pytest

stages:
  - lint
  - test
  - demo
  - package
  - publish

lint:unit-simple:
  stage: lint
  script:
    - cd unit-simple
    - pylint --rcfile=../pylintrc unit_simple.py
    - pip install .
    - pylint --rcfile=../pylintrc demo.py
    - pylint --rcfile=../pylintrc test.py
    - pylint --rcfile=../pylintrc unit_simple_test.py

test:unit-simple:
  stage: test
  script:
    - cd unit-simple
    - pytest
    - python test.py

demo:unit-simple:
  stage: demo
  script:
    - cd unit-simple
    - python demo.py

package:unit-simple:test_pypi:
  stage: package
  variables:
    DIST_DIR: test_pypi_dist
  script:
    - cd unit-simple
    - rm -rf $DIST_DIR/
    - sed -i "s#version\ =\ .*#version\ =\ \"$UNIT_SIMPLE_VERSION\"#g" pyproject.toml
    - cat pyproject.toml
    - pip install .
    - pip install --upgrade build
    - python -m build -o $DIST_DIR
    - ls -l $DIST_DIR
    - pip uninstall -y build
  artifacts:
    paths:
      - unit-simple/$DIST_DIR/*

package:unit-simple:pypi:
  stage: package
  variables:
    DIST_DIR: dist
  when: manual
  script:
    - cd unit-simple
    - rm -rf $DIST_DIR/
    - sed -i "s#version\ =\ .*\$#version\ =\ \"$UNIT_SIMPLE_VERSION\"#g" pyproject.toml
    - cat pyproject.toml
    - pip install .
    - pip install --upgrade build
    - python -m build
    - ls -l $DIST_DIR
    - pip uninstall -y build
  artifacts:
    paths:
      - unit-simple/$DIST_DIR/*

publish:unit-simple:test_pypi:
  stage: publish
  dependencies:
    - package:unit-simple:test_pypi
  when: manual
  script:
    - cd unit-simple
    - pip install --upgrade twine
    - python -m twine upload --repository testpypi -u $TEST_PYPI_USERNAME -p $TEST_PYPI_PASSWORD test_pypi_dist/*
    - pip uninstall -y twine

publish:unit-simple:pypi:
  stage: publish
  dependencies:
    - package:unit-simple:pypi
  when: manual
  script:
    - cd unit-simple
    - pip install --upgrade twine
    - python -m twine upload -u $PYPI_USERNAME -p $PYPI_PASSWORD dist/*
    - pip uninstall -y twine
